{"version":3,"sources":["../../packages/core/lib/Pagination/README.md"],"names":[],"mappings":"qGAAA,OAAe","file":"static/js/93.411a7bfd.chunk.js","sourcesContent":["export default \"Pagination 分页器\\n---\\n\\n用于展示页码、请求数据等。\\n\\n## 基础示例\\n\\n```jsx\\nimport { Fragment, useState } from 'react';\\nimport { Pagination } from '@uiw/react-native';\\nfunction Demo() {\\n  const [current, setCurrent] = useState(false)\\n  return (\\n    <Fragment>\\n      <Pagination\\n        current={current}\\n        total={60}\\n        pageSize={8}\\n        onPageChange={(type, current) => {\\n          setCurrent(current)\\n          console.log('type, current: ', type, current);\\n        }}\\n      />\\n    </Fragment>\\n  );\\n}\\n```\\n\\n## 使用icon && 修改大小\\n\\n```jsx\\nimport { Fragment, useState } from 'react';\\nimport { Pagination } from '@uiw/react-native';\\nfunction Demo() {\\n  const [current, setCurrent] = useState(false)\\n  return (\\n    <Fragment>\\n      <Pagination\\n        icon\\n        size='large'\\n        current={current}\\n        total={60}\\n        pageSize={8}\\n        onPageChange={(type, current) => {\\n          setCurrent(current)\\n          console.log('type, current: ', type, current);\\n        }}\\n      />\\n    </Fragment>\\n  );\\n}\\n```\\n\\n## Props\\n\\n```ts\\nexport interface PaginationProps {\\n  /** 尺寸 */\\n  size?: 'small' | 'default' | 'large';\\n  /** 当前页\\t */\\n  current?: number,\\n  /** 当前页的颜色 */\\n  currentColor?: string\\n  /** 数据总量\\t */\\n  total: number,\\n  /** 每页数据量\\t */\\n  pageSize?: number,\\n  /** 是否以 icon 形式展示按钮 */\\n  icon?: boolean,\\n  /** 点击页码按钮时触发 */\\n  onPageChange?: (type: 'prev' | 'next', current: number) => void,\\n}\\n```\\n\";"],"sourceRoot":""}