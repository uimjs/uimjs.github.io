{"version":3,"sources":["../../packages/core/lib/SwipeAction/README.md"],"names":[],"mappings":"uGAAA,OAAe","file":"static/js/108.4cc54266.chunk.js","sourcesContent":["export default \"SwipeAction 滑动操作组件。\\n---\\n\\n结合手势操作，从屏幕一侧唤出操作。\\n\\n\\n## 基础示例\\n\\n```jsx\\nimport React, { Component } from 'react';\\nimport { View, Text, StyleSheet } from 'react-native';\\nimport { SwipeAction } from '@uiw/react-native';\\nimport Layout, { Container } from '../../Layout';\\nimport { ComProps } from '../../routes';\\n\\nconst { Header, Body, Card, Footer } = Layout;\\n\\nexport interface SwipeActionProps extends ComProps { }\\n\\nexport default class SwipeActionView extends Component<SwipeActionProps> {\\n  render() {\\n    const { route } = this.props;\\n    const description = route.params.description;\\n    const title = route.params.title;\\n    const right = [\\n      {\\n        text: 'More',\\n        color: \\\"orange\\\",\\n        x: 250,\\n        onPress: () => { },\\n      },\\n      {\\n        text: 'Delete',\\n        color: \\\"red\\\",\\n        x: 400,\\n        onPress: () => { },\\n      }\\n    ];\\n    return (\\n      <Container>\\n        <Layout>\\n          <Header title={title} description={description} />\\n          <Body>\\n            <Card title=\\\"左右滑动，显示按钮\\\" style={styles.card}>\\n              <SwipeAction\\n                right={right}\\n              >\\n                <View style={styles.view}>\\n                  <Text>滑动</Text>\\n                </View>\\n              </SwipeAction>\\n            </Card>\\n          </Body>\\n          <Footer />\\n        </Layout>\\n      </Container>\\n    );\\n  }\\n}\\n\\nconst styles = StyleSheet.create({\\n  card: {\\n    backgroundColor: '#fff',\\n    paddingLeft: 20,\\n    paddingRight: 20,\\n    paddingBottom: 30,\\n  },\\n  view: {\\n    height: 30,\\n  },\\n});\\n\\n```\\n\\n\\n## Props\\n组件继承react-native-gesture-handler[`Swipeable`](https://docs.swmansion.com/react-native-gesture-handler/docs/api/components/swipeable)\\n```tsx\\nexport interface SwipeActionProps {\\n  right: Array<{\\n    text: string;\\n    color: string;\\n    x?: number;\\n    onPress?: () => void\\n  }>;\\n  enableTrackpadTwoFingerGesture?: boolean;\\n  friction?: number;\\n  leftThreshold?: number;\\n  rightThreshold?: number;\\n  overshootLeft?: boolean;\\n  overshootRight?: boolean;\\n  overshootFriction?: number;\\n  onSwipeableLeftOpen?: () => void;\\n  onSwipeableRightOpen?: () => void;\\n  onSwipeableOpen?: () => void;\\n  onSwipeableClose?: () => void;\\n  onSwipeableLeftWillOpen?: () => void;\\n  onSwipeableRightWillOpen?: () => void;\\n  onSwipeableWillOpen?: () => void;\\n  onSwipeableWillClose?: () => void;\\n  children?: React.ReactNode;\\n  renderLeftActions?: (progressAnimatedValue: Animated.AnimatedInterpolation, dragAnimatedValue: Animated.AnimatedInterpolation) => React.ReactNode;\\n  renderRightActions?: (progressAnimatedValue: Animated.AnimatedInterpolation, dragAnimatedValue: Animated.AnimatedInterpolation) => React.ReactNode;\\n  useNativeAnimations?: boolean;\\n  animationOptions?: Record<string, unknown>;\\n  containerStyle?: StyleProp<ViewStyle>;\\n  childrenContainerStyle?: StyleProp<ViewStyle>;\\n}\\n```\";"],"sourceRoot":""}